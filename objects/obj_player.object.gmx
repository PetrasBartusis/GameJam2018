<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle_0</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create the player object
spd = 5;
image_speed=0.1
acSpeed=1; // Acceleration speed
maxSpeed=10;  // Maximum speed
friction=0.5 // I won't explain this one. 
playerGravity=0 // If = 0 player is in the air
glow_size = 1;
hp=100;
movement = IDLE;
current_light = 2;

xoffset=10; // x offset for collisions
yoffset=26;
sprites[IDLE, LIGHT_0]=spr_player_idle_0;
sprites[MOVE, LIGHT_0]=spr_player_move_0;
sprites[JUMP, LIGHT_0]=spr_player_jump_0;
sprites[CROUCH, LIGHT_0]=spr_player_crouch_0;

sprites[IDLE, LIGHT_1]=spr_player_idle_1;
sprites[MOVE, LIGHT_1]=spr_player_move_1;
sprites[JUMP, LIGHT_1]=spr_player_jump_1;
sprites[CROUCH, LIGHT_1]=spr_player_crouch_1;

sprites[IDLE, LIGHT_2]=spr_player_idle_2;
sprites[MOVE, LIGHT_2]=spr_player_move_2;
sprites[JUMP, LIGHT_2]=spr_player_jump_2;
sprites[CROUCH, LIGHT_2]=spr_player_crouch_2;

xoffset=10; // x offset for collisions
yoffset=26;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hp&gt;0){ 
    hp-=1; //TODO: dificulty- e=1, m=2, h=3; Room ends in about 25s
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*
///Move the player
if(instance_exists(obj_input)){
    if(obj_input.right_key)
        x+=spd;
    if(obj_input.left_key)
        x-=spd;
    if(obj_input.up_key)
        y-=spd;
    if(obj_input.down_key)
        y+=spd;
}

*/

// movement 

if(instance_exists(obj_input)){
    if obj_input.left_key {
        hspeed-=acSpeed;
        movement=MOVE;
        if speed &gt; maxSpeed 
            speed-=acSpeed;
    }
    if obj_input.right_key {
        hspeed+=acSpeed;
        movement=MOVE;
        if speed &gt; maxSpeed 
            speed-=acSpeed;
    }
}

// hp timer

if (alarm[0] &lt;= 0){
    alarm[0] = room_speed
}


scr_camera_movement();


// jump

if keyboard_check(ord("W")) &amp;&amp; playerGravity = 1 {
    vspeed=-25;
    movement=JUMP;
    playerGravity =0;
}

if(speed &lt; 0.1 and speed &gt; -0.1){
    movement=IDLE;
}

// gravity

if playerGravity = 0 { // If player is in the air, use gravity
    if vspeed&lt;= 20 
        vspeed+=2; 
        movement=JUMP;
}

if(obj_input.down_key and playerGravity=1){
    hspeed = 0;
    movement = CROUCH;
}

// collision with wall

if position_meeting(x, y+yoffset, obj_solid_ground) {
    var cal = instance_position(x, y+yoffset, obj_solid_ground);
    y= cal.y-(yoffset + 25);
    if vspeed &gt;0 vspeed=0; 
    playerGravity=1;
}
if !position_meeting(x, y+yoffset, obj_solid_ground) &amp;&amp; playerGravity=1  playerGravity=0; 

if position_meeting(x, y-yoffset, obj_solid_ground) {
   if vspeed&lt;0 vspeed=0;
   var cal2 = instance_position(x, y-yoffset, obj_solid_ground);
   y= cal2.y+yoffset * 2;
}
if position_meeting(x-xoffset, y, obj_solid_ground) {
   if hspeed&lt;0 hspeed=0;
   var cal3 = instance_position(x-xoffset, y, obj_solid_ground);
}
if position_meeting(x+xoffset, y, obj_solid_ground) {
   if hspeed&gt;0 hspeed=0;
   var cal3 = instance_position(x+xoffset, y, obj_solid_ground);
}


// enemy collision

if place_meeting(x, y, obj_enemy) {
    var enemy1= instance_nearest(x,y,obj_enemy);
    if enemy1.x &gt; x hspeed=-5;
    if enemy1.x &gt; x enemy1.hspeed=5;
    if enemy1.x &lt; x hspeed=+5;
    if enemy1.x &lt; x enemy1.hspeed=-5;
    if y+10 &lt; enemy1.y vspeed=-20;
    if y-10 &gt; enemy1.y vspeed=+5;
    enemy1.state=scr_enemy_idle_state;
    hp-=10;
    scr_shake_camera();
}

glow_size=hp/30;

current_light = hp/35;


if hp &lt;= 0 room_goto(lose_game);  // end game
scr_camera_movement();

scr_flicker_light();

//set the player sprites according to the movement
sprite_index = sprites[movement, current_light];

//turn the enemy towards the player and check if it's not 0
if(hspeed != 0){
    image_xscale = sign(hspeed);
}

//move the backgrounds (parallax)
background_x[0] = view_xview/1.2;
background_x[1] = view_xview/1.3

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bonfire">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp=103
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(20, 64, hp)
draw_text(60, 64, glow_size)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
